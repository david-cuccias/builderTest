{"version":3,"file":"builder-widgets.es5.js","sources":["../node_modules/lodash-es/isArray.js","../node_modules/lodash-es/last.js","../src/components/Carousel.tsx","../src/components/Tabs.tsx","../src/components/Accordion.tsx","../src/components/Masonry.tsx"],"sourcesContent":["/**\n * Checks if `value` is classified as an `Array` object.\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is an array, else `false`.\n * @example\n *\n * _.isArray([1, 2, 3]);\n * // => true\n *\n * _.isArray(document.body.children);\n * // => false\n *\n * _.isArray('abc');\n * // => false\n *\n * _.isArray(_.noop);\n * // => false\n */\nvar isArray = Array.isArray;\n\nexport default isArray;\n","/**\n * Gets the last element of `array`.\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Array\n * @param {Array} array The array to query.\n * @returns {*} Returns the last element of `array`.\n * @example\n *\n * _.last([1, 2, 3]);\n * // => 3\n */\nfunction last(array) {\n  var length = array == null ? 0 : array.length;\n  return length ? array[length - 1] : undefined;\n}\n\nexport default last;\n","import {\n  BuilderBlock,\n  BuilderBlocks,\n  BuilderBlockComponent,\n  BuilderElement,\n  BuilderStoreContext,\n  stringToFunction,\n  BuilderAsyncRequestsContext,\n  Builder,\n  withBuilder,\n} from '@builder.io/react';\nimport * as React from 'react';\nimport isArray from 'lodash-es/isArray';\nimport last from 'lodash-es/last';\n\nimport Slider, { Settings, ResponsiveObject } from 'react-slick';\n\nconst defaultElement: BuilderElement = {\n  '@type': '@builder.io/sdk:Element',\n  responsiveStyles: {\n    large: {\n      // TODO: always apply these if not given\n      position: 'relative',\n      display: 'flex',\n      alignItems: 'stretch',\n      flexDirection: 'column',\n      height: '400px',\n    },\n  },\n  children: [\n    {\n      '@type': '@builder.io/sdk:Element',\n      responsiveStyles: {\n        large: {\n          marginTop: '50px',\n          textAlign: 'center',\n          display: 'flex',\n          flexDirection: 'column',\n        },\n      },\n      component: {\n        name: 'Text',\n        options: {\n          text: 'I am a slide',\n        },\n      },\n    },\n  ],\n};\nconst defaultButton: BuilderElement = {\n  '@type': '@builder.io/sdk:Element',\n  responsiveStyles: {\n    large: {\n      position: 'relative',\n      display: 'flex',\n      alignItems: 'stretch',\n      flexDirection: 'column',\n      height: '30px',\n    },\n  },\n};\n\ntype BuilderBlockType = BuilderElement;\n\ninterface CarouselProps {\n  slides: Array<\n    React.ReactNode | { content: BuilderBlockType[] } /* BuilderBlock <- export this type */\n  >;\n  builderBlock: BuilderBlockType;\n  nextButton?: BuilderBlockType[];\n  prevButton?: BuilderBlockType[];\n  autoplay?: boolean;\n  autoplaySpeed?: number;\n  hideDots?: boolean;\n  useChildrenForSlides?: boolean;\n  slickProps?: Settings;\n  responsive?: ResponsiveObject[];\n}\n\n// TODO: change to slick grid\nclass BuilderCarouselComponent extends React.Component<CarouselProps> {\n  divRef: HTMLElement | null = null;\n  sliderRef: Slider | null = null;\n\n  private _errors?: Error[];\n  private _logs?: string[];\n\n  componentDidMount() {\n    setTimeout(() => {\n      if (this.divRef) {\n        this.divRef.dispatchEvent(\n          new CustomEvent('builder:carousel:load', {\n            bubbles: true,\n            cancelable: false,\n            detail: {\n              block: this.props.builderBlock,\n              carousel: this.sliderRef,\n            },\n          })\n        );\n      }\n    });\n  }\n\n  render() {\n    let slides = this.props.slides;\n\n    if (slides && !Builder.isBrowser) {\n      slides = slides.slice(0, 1);\n    }\n\n    return (\n      <BuilderAsyncRequestsContext.Consumer>\n        {value => {\n          this._errors = value && value.errors;\n          this._logs = value && value.logs;\n\n          return (\n            <BuilderStoreContext.Consumer>\n              {state => (\n                <div ref={ref => (this.divRef = ref)} className=\"builder-carousel\">\n                  {/* Strange encoding issue workaround... */}\n                  {Builder.isServer ? (\n                    <style\n                      type=\"text/css\"\n                      dangerouslySetInnerHTML={{ __html: slickStyles }}\n                    ></style>\n                  ) : (\n                    <style type=\"text/css\">{slickStyles}</style>\n                  )}\n                  <Slider\n                    responsive={this.props.responsive}\n                    ref={ref => (this.sliderRef = ref)}\n                    afterChange={slide => {\n                      // TODO; callbacks\n                      if (this.divRef) {\n                        this.divRef.dispatchEvent(\n                          new CustomEvent('builder:carousel:change', {\n                            bubbles: true,\n                            cancelable: false,\n                            detail: {\n                              slide,\n                              block: this.props.builderBlock,\n                              carousel: this.sliderRef,\n                            },\n                          })\n                        );\n                      }\n                    }}\n                    autoplay={this.props.autoplay}\n                    autoplaySpeed={\n                      this.props.autoplaySpeed ? this.props.autoplaySpeed * 1000 : undefined\n                    }\n                    dots={!this.props.hideDots}\n                    // TODO: on change emit event on element?\n                    // renderBottomCenterControls={this.props.hideDots ? () => null : undefined}\n\n                    // OOF!!\n                    nextArrow={\n                      <div>\n                        <BuilderBlocks\n                          parentElementId={this.props.builderBlock.id}\n                          dataPath=\"component.options.prevButton\"\n                          blocks={this.props.prevButton}\n                        />\n                      </div>\n                    }\n                    // OOF!!\n                    prevArrow={\n                      <div>\n                        <BuilderBlocks\n                          parentElementId={this.props.builderBlock.id}\n                          dataPath=\"component.options.nextButton\"\n                          blocks={this.props.nextButton}\n                        />\n                      </div>\n                    }\n                    {...this.props.slickProps}\n                  >\n                    {/* todo: children.forEach hmm insert block inside */}\n                    {this.props.useChildrenForSlides\n                      ? this.props.builderBlock &&\n                        this.props.builderBlock.children &&\n                        this.props.builderBlock.children.map(\n                          (block: BuilderElement, index: number) => {\n                            if (block.repeat && block.repeat.collection) {\n                              const collectionPath = block.repeat.collection;\n                              const collectionName = last(\n                                (collectionPath || '')\n                                  .split(/\\.\\w+\\(/)[0]\n                                  .trim()\n                                  .split('.')\n                              );\n                              const itemName =\n                                block.repeat.itemName ||\n                                (collectionName ? collectionName + 'Item' : 'item');\n\n                              let array: any[] | void = stringToFunction(\n                                collectionPath,\n                                true,\n                                this._errors,\n                                this._logs\n                              )(state.state);\n\n                              if (isArray(array)) {\n                                if (!Builder.isBrowser) {\n                                  array = array.slice(0, 1);\n                                }\n\n                                return array.map((data, index) => {\n                                  // TODO: Builder state produce the data\n                                  const childState = {\n                                    ...state.state,\n                                    $index: index,\n                                    $item: data,\n                                    [itemName]: data,\n                                  };\n\n                                  return (\n                                    <BuilderStoreContext.Provider\n                                      key={block.id}\n                                      value={{ ...state, state: childState } as any}\n                                    >\n                                      <BuilderBlockComponent\n                                        block={{\n                                          ...block,\n                                          repeat: null,\n                                        }}\n                                        index={index}\n                                        child={true} /* TODO: fieldname? */\n                                      />\n                                    </BuilderStoreContext.Provider>\n                                  );\n                                });\n                              }\n                            }\n                            return (\n                              <BuilderBlockComponent\n                                key={block.id}\n                                block={block}\n                                index={index}\n                                child={true} /* TODO: fieldname? */\n                              />\n                            );\n                          }\n                        )\n                      : this.props.slides &&\n                        this.props.slides.map((slide, index) => (\n                          // TODO: how make react compatible with plain react components\n                          // slides: <Foo><Bar> <- builder blocks if passed react nodes as blocks just forward them\n                          <BuilderBlocks\n                            key={index}\n                            parentElementId={this.props.builderBlock && this.props.builderBlock.id}\n                            dataPath={`component.options.slides.${index}.content`}\n                            child\n                            blocks={(slide as any).content || slide}\n                          />\n                        ))}\n                  </Slider>\n                </div>\n              )}\n            </BuilderStoreContext.Consumer>\n          );\n        }}\n      </BuilderAsyncRequestsContext.Consumer>\n    );\n  }\n}\n\nconst slickStyles = `@charset 'UTF-8';\n  .slick-list,.slick-slider,.slick-track{position:relative;display:block}.slick-loading .slick-slide,.slick-loading .slick-track{visibility:hidden}.slick-slider{box-sizing:border-box;-webkit-user-select:none;-moz-user-select:none;-ms-user-select:none;user-select:none;-webkit-touch-callout:none;-khtml-user-select:none;-ms-touch-action:pan-y;touch-action:pan-y;-webkit-tap-highlight-color:transparent}.slick-list{overflow:hidden;margin:0;padding:0}.slick-list:focus{outline:0}.slick-list.dragging{cursor:pointer;cursor:hand}.slick-slider .slick-list,.slick-slider .slick-track{-webkit-transform:translate3d(0,0,0);-moz-transform:translate3d(0,0,0);-ms-transform:translate3d(0,0,0);-o-transform:translate3d(0,0,0);transform:translate3d(0,0,0)}.slick-track{top:0;left:0}.slick-track:after,.slick-track:before{display:table;content:''}.slick-track:after{clear:both}.slick-slide{display:none;float:left;height:auto;min-height:1px}[dir=rtl] .slick-slide{float:right}.slick-slide img{display:block}.slick-slide.slick-loading img{display:none}.slick-slide.dragging img{pointer-events:none}.slick-initialized .slick-slide{display:block}.slick-vertical .slick-slide{display:block;height:auto;border:1px solid transparent}.slick-arrow.slick-hidden{display:none}\n  .slick-dots,.slick-next,.slick-prev{position:absolute;display:block;padding:0}.slick-dots li button:before,.slick-next:before,.slick-prev:before{font-family:slick;-webkit-font-smoothing:antialiased;-moz-osx-font-smoothing:grayscale}.slick-loading .slick-list{background:url(ajax-loader.gif) center center no-repeat #fff}@font-face{font-display:swap;font-family:slick;font-weight:400;font-style:normal;src:url(https://cdnjs.cloudflare.com/ajax/libs/slick-carousel/1.6.0/fonts/slick.eot);src:local(\"slick\"),url(https://cdnjs.cloudflare.com/ajax/libs/slick-carousel/1.6.0/fonts/slick.eot?#iefix) format('embedded-opentype'),url(https://cdnjs.cloudflare.com/ajax/libs/slick-carousel/1.6.0/fonts/slick.woff) format('woff'),url(https://cdnjs.cloudflare.com/ajax/libs/slick-carousel/1.6.0/fonts/slick.ttf) format('truetype'),url(https://cdnjs.cloudflare.com/ajax/libs/slick-carousel/1.6.0/fonts/slick.svg#slick) format('svg')}.slick-next,.slick-prev{font-size:0;line-height:0;top:50%;width:20px;height:20px;-webkit-transform:translate(0,-50%);-ms-transform:translate(0,-50%);transform:translate(0,-50%);cursor:pointer;color:transparent;border:none;outline:0;background:0 0}.slick-next:focus,.slick-next:hover,.slick-prev:focus,.slick-prev:hover{color:transparent;outline:0;background:0 0}.slick-next:focus:before,.slick-next:hover:before,.slick-prev:focus:before,.slick-prev:hover:before{opacity:1}.slick-next.slick-disabled:before,.slick-prev.slick-disabled:before{opacity:.25}.slick-next:before,.slick-prev:before{font-size:20px;line-height:1;opacity:.75;color:#fff}.slick-prev{left:-25px}[dir=rtl] .slick-prev{right:-25px;left:auto}.slick-prev:before{content:''}.slick-next:before,[dir=rtl] .slick-prev:before{content:''}.slick-next{right:-25px}[dir=rtl] .slick-next{right:auto;left:-25px}[dir=rtl] .slick-next:before{content:'•'}.slick-dotted.slick-slider{margin-bottom:30px}.slick-dots{bottom:-25px;width:100%;margin:0;list-style:none;text-align:center}.slick-dots li{position:relative;display:inline-block;width:20px;height:20px;margin:0 5px;padding:0;cursor:pointer}.slick-dots li button{font-size:0;line-height:0;display:block;width:20px;height:20px;padding:5px;cursor:pointer;color:transparent;border:0;outline:0;background:0 0}.slick-dots li button:focus,.slick-dots li button:hover{outline:0}.slick-dots li button:focus:before,.slick-dots li button:hover:before{opacity:1}.slick-dots li button:before{font-size:6px;line-height:20px;position:absolute;top:0;left:0;width:20px;height:20px;content:'•';text-align:center;opacity:.25;color:#000}.slick-dots li.slick-active button:before{opacity:.75;color:#000}\n`;\n\nexport const BuilderCarousel = withBuilder(BuilderCarouselComponent, {\n  name: 'Builder:Carousel',\n  // TODO: default children\n  canHaveChildren: true,\n  defaultStyles: {\n    paddingLeft: '30px',\n    paddingRight: '30px',\n    paddingBottom: '30px',\n  },\n  inputs: [\n    {\n      name: 'slides',\n      type: 'list',\n      subFields: [\n        {\n          name: 'content',\n          type: 'uiBlocks',\n          hideFromUI: true,\n          defaultValue: [defaultElement],\n        },\n      ],\n      defaultValue: [\n        {\n          content: [defaultElement],\n        },\n        {\n          content: [defaultElement],\n        },\n      ],\n      // showIf: options => !options.get('useChildrenForSlides'),\n      showIf: options => !options.get('useChildrenForSlides'),\n    },\n    {\n      name: 'hideDots',\n      helperText: 'Show pagination dots',\n      type: 'boolean',\n      defaultValue: false,\n    },\n    {\n      name: 'autoplay',\n      helperText: 'Automatically rotate to the next slide every few seconds',\n      type: 'boolean',\n      defaultValue: false,\n    },\n    {\n      name: 'autoplaySpeed',\n      type: 'number',\n      defaultValue: 5,\n      helperText:\n        'If auto play is on, how many seconds to wait before automatically changing each slide',\n      // TODO: showIf option\n      // showIf: options => options.get('autoplay'),\n      // TODO: why fn not working?\n      showIf: options => options.get('autoplay'),\n      // showIf: (options) => options.get('autoPlay')\n    },\n    // TODO: on add new duplicate the prior or expect use templates\n    // onChange:\n    {\n      name: 'prevButton',\n      type: 'uiBlocks',\n      hideFromUI: true,\n      defaultValue: [\n        {\n          ...defaultButton,\n          component: {\n            name: 'Image',\n            options: {\n              image:\n                'https://cdn.builder.io/api/v1/image/assets%2FagZ9n5CUKRfbL9t6CaJOyVSK4Es2%2Fd909a5b91650499c9e0524cc904eeb77',\n            },\n          },\n        },\n      ],\n    },\n    {\n      name: 'nextButton',\n      type: 'uiBlocks',\n      hideFromUI: true,\n      defaultValue: [\n        {\n          ...defaultButton,\n          component: {\n            name: 'Image',\n            options: {\n              image:\n                'https://cdn.builder.io/api/v1/image/assets%2FagZ9n5CUKRfbL9t6CaJOyVSK4Es2%2Fdb2a9827561249aea3817b539aacdcdc',\n            },\n          },\n        },\n      ],\n    },\n    {\n      name: 'useChildrenForSlides',\n      type: 'boolean',\n      helperText:\n        'Use child elements for each slide, instead of the array. Useful for dynamically repeating slides',\n      advanced: true,\n      defaultValue: false,\n      onChange: (options: Map<string, any>) => {\n        if (options.get('useChildrenForSlides') === true) {\n          options.set('slides', []);\n        }\n      },\n    },\n    {\n      name: 'responsive',\n      type: 'array',\n      helperText: 'Responsive settings - e.g. see https://kenwheeler.github.io/slick/',\n      advanced: true,\n      defaultValue: [\n        {\n          width: 3000,\n          slidesToShow: 2,\n          slidesToScroll: 2,\n        },\n        {\n          width: 400,\n          slidesToShow: 1,\n          slidesToScroll: 1,\n        },\n      ],\n      subFields: [\n        {\n          name: 'breakpoint',\n          type: 'number',\n          defaultValue: 400,\n          required: true,\n        },\n        {\n          name: 'settings',\n          type: 'object',\n          defaultValue: {\n            slidesToShow: 2,\n            slidesToScroll: 2,\n          },\n          subFields: [\n            {\n              name: 'slidesToShow',\n              type: 'number',\n              defaultValue: 2,\n            },\n            {\n              name: 'slidesToScroll',\n              type: 'number',\n              defaultValue: 2,\n            },\n            {\n              name: 'infinite',\n              type: 'boolean',\n              defaultValue: true,\n            },\n            {\n              name: 'dots',\n              type: 'boolean',\n              defaultValue: true,\n            },\n          ],\n        },\n      ],\n    },\n  ],\n});\n","import * as React from 'react';\nimport { BuilderBlocks, BuilderBlock, withBuilder } from '@builder.io/react';\n\n// TODO: manual typings and documentation for this with typedoc and in builder guides pages\ntype ElementType = any;\n\nexport interface TabsProps {\n  tabs: {\n    label: ElementType[];\n    content: ElementType[];\n  }[];\n  builderBlock: any;\n  defaultActiveTab?: number;\n  collapsible?: boolean;\n  tabHeaderLayout?: string;\n  activeTabStyle?: any;\n}\n\nconst defaultTab = {\n  '@type': '@builder.io/sdk:Element',\n  responsiveStyles: {\n    large: {\n      paddingLeft: '20px',\n      paddingRight: '20px',\n      paddingTop: '10px',\n      paddingBottom: '10px',\n      minWidth: '100px',\n      textAlign: 'center',\n      // TODO: add to all\n      display: 'flex',\n      flexDirection: 'column',\n      cursor: 'pointer',\n      userSelect: 'none',\n    },\n  },\n  component: {\n    // Builder:text\n    name: 'Text',\n    options: {\n      text: 'New tab',\n    },\n  },\n};\n\nconst defaultElement = {\n  '@type': '@builder.io/sdk:Element',\n  responsiveStyles: {\n    large: {\n      height: '200px',\n      display: 'flex',\n      marginTop: '20px',\n      flexDirection: 'column',\n    },\n  },\n  component: {\n    name: 'Text',\n    options: {\n      text: 'New tab content ',\n    },\n  },\n};\n\nclass TabsComponent extends React.Component<TabsProps, { activeTab: number }> {\n  state = {\n    activeTab: 0,\n  };\n\n  get activeTabSpec() {\n    return this.props.tabs && this.props.tabs[this.state.activeTab];\n  }\n\n  componentWillMount() {\n    if (this.props.defaultActiveTab) {\n      this.activeTab = this.props.defaultActiveTab - 1;\n    }\n  }\n\n  get activeTab() {\n    return this.state.activeTab;\n  }\n\n  set activeTab(tab) {\n    this.setState({\n      ...this.state,\n      activeTab: tab,\n    });\n  }\n\n  render() {\n    return (\n      <React.Fragment>\n        {/* TODO: tab overflow wrap option */}\n        <span\n          style={{\n            display: 'flex',\n            flexDirection: 'row',\n            justifyContent: this.props.tabHeaderLayout,\n            overflow: 'auto',\n            WebkitOverflowScrolling: 'touch',\n          }}\n          className=\"builder-tabs-wrap\"\n        >\n          {this.props.tabs &&\n            this.props.tabs.map((item, index) => (\n              <span\n                key={index}\n                className={\n                  'builder-tab-wrap ' + (this.activeTabSpec === item ? 'builder-tab-active' : '')\n                }\n                style={{\n                  ...((this.activeTabSpec === item && this.props.activeTabStyle) || undefined),\n                }}\n                onClick={() => {\n                  if (index === this.activeTab && this.props.collapsible) {\n                    this.activeTab = -1;\n                  } else {\n                    this.activeTab = index;\n                  }\n                }}\n              >\n                <BuilderBlocks\n                  // TODO: parent={this.props.builderBlock}\n                  parentElementId={this.props.builderBlock.id}\n                  // TODO: start with just \"tabs.\" when bump react version\n                  dataPath={`component.options.tabs.${this.state.activeTab}.label`}\n                  blocks={item.label}\n                />\n              </span>\n            ))}\n        </span>\n\n        {/* TODO: way to do react node or elements can be here  */}\n        {this.activeTabSpec && (\n          <BuilderBlocks\n            parentElementId={this.props.builderBlock.id}\n            dataPath={`component.options.tabs.${this.state.activeTab}.content`}\n            blocks={this.activeTabSpec.content}\n          />\n        )}\n      </React.Fragment>\n    );\n  }\n}\n\nexport const Tabs = withBuilder(TabsComponent, {\n  name: 'Builder: Tabs',\n  inputs: [\n    {\n      name: 'tabs',\n      type: 'list',\n      subFields: [\n        {\n          name: 'label',\n          type: 'uiBlocks',\n          hideFromUI: true,\n          defaultValue: [defaultTab],\n        },\n        {\n          name: 'content',\n          type: 'uiBlocks',\n          hideFromUI: true,\n          defaultValue: [defaultElement],\n        },\n      ],\n      defaultValue: [\n        {\n          label: [\n            {\n              ...defaultTab,\n              component: {\n                name: 'Text',\n                options: {\n                  text: 'Tab 1',\n                },\n              },\n            },\n          ],\n          content: [\n            {\n              ...defaultElement,\n              component: {\n                name: 'Text',\n                options: {\n                  text: 'Tab 1 content',\n                },\n              },\n            },\n          ],\n        },\n        {\n          label: [\n            {\n              ...defaultTab,\n              component: {\n                name: 'Text',\n                options: {\n                  text: 'Tab 2',\n                },\n              },\n            },\n          ],\n          content: [\n            {\n              ...defaultElement,\n              component: {\n                name: 'Text',\n                options: {\n                  text: 'Tab 2 content',\n                },\n              },\n            },\n          ],\n        },\n      ],\n    },\n    {\n      name: 'activeTabStyle',\n      type: 'uiStyle',\n      helperText: 'CSS styles for the active tab',\n      defaultValue: {\n        backgroundColor: 'rgba(0, 0, 0, 0.1)',\n      },\n    },\n    {\n      name: 'defaultActiveTab',\n      type: 'number',\n      helperText:\n        'Deafult tab to open to. Set to \"1\" for the first tab, \"2\" for the second, or choose \"0\" for none',\n      defaultValue: 1,\n      advanced: true,\n    },\n    {\n      name: 'collapsible',\n      type: 'boolean',\n      helperText: 'If on, clicking an open tab closes it so no tabs are active',\n      defaultValue: false,\n      advanced: true,\n    },\n    {\n      name: 'tabHeaderLayout',\n      type: 'enum',\n      helperText: 'Change the layout of the tab headers (uses justify-content)',\n      defaultValue: 'flex-start',\n      enum: [\n        { label: 'Center', value: 'center' },\n        { label: 'Space between', value: 'space-between' },\n        { label: 'Space around', value: 'space-around' },\n        { label: 'Left', value: 'flex-start' },\n        { label: 'Right', value: 'flex-end' },\n      ],\n    },\n  ],\n});\n","import {\n  BuilderBlock,\n  BuilderElement,\n  BuilderBlocks,\n  BuilderStoreContext,\n  BuilderBlockComponent,\n  stringToFunction,\n  BuilderAsyncRequestsContext,\n  withBuilder,\n} from '@builder.io/react';\nimport * as React from 'react';\nimport get from 'lodash-es/get';\nimport isArray from 'lodash-es/isArray';\nimport last from 'lodash-es/last';\n// import { get, isArray, last } from 'lodash';\n\nconst defaultTitle: BuilderElement = {\n  '@type': '@builder.io/sdk:Element',\n  layerName: 'Accordion item title',\n  responsiveStyles: {\n    large: {\n      marginTop: '10px',\n      position: 'relative',\n      display: 'flex',\n      alignItems: 'stretch',\n      flexDirection: 'column',\n      paddingBottom: '10px',\n    },\n  },\n  children: [\n    {\n      '@type': '@builder.io/sdk:Element',\n      responsiveStyles: {\n        large: {\n          textAlign: 'left',\n          display: 'flex',\n          flexDirection: 'column',\n        },\n      },\n      component: {\n        name: 'Text',\n        options: {\n          text: 'I am an accordion title. Click me!',\n        },\n      },\n    },\n  ],\n};\n\nconst defaultDetail: BuilderElement = {\n  '@type': '@builder.io/sdk:Element',\n  layerName: 'Accordion item detail',\n  responsiveStyles: {\n    large: {\n      position: 'relative',\n      display: 'flex',\n      alignItems: 'stretch',\n      flexDirection: 'column',\n      marginTop: '10px',\n      paddingBottom: '10px',\n    },\n  },\n  children: [\n    {\n      '@type': '@builder.io/sdk:Element',\n      responsiveStyles: {\n        large: {\n          paddingTop: '50px',\n          textAlign: 'left',\n          display: 'flex',\n          flexDirection: 'column',\n          paddingBottom: '50px',\n        },\n      },\n      component: {\n        name: 'Text',\n        options: {\n          text: 'I am an accordion detail, hello!',\n        },\n      },\n    },\n  ],\n};\n\ninterface AccordionProps {\n  items: {\n    title: BuilderElement[];\n    detail: BuilderElement[];\n  }[];\n\n  oneAtATime?: boolean;\n  grid?: boolean;\n  defaultOpen?: number;\n  animate?: boolean;\n  builderBlock?: BuilderElement;\n  // TODO: gridRowWidth\n  gridRowWidth?: number;\n  useChildrenForItems?: boolean;\n}\n\n// TODO: change to slick grid\nclass BuilderAccordionComponent extends React.Component<AccordionProps> {\n  divRef: HTMLElement | null = null;\n\n  state = {\n    open: [] as number[],\n  };\n\n  private _errors?: Error[];\n  private _logs?: string[];\n\n  componentDidMount() {\n    setTimeout(() => {\n      if (this.divRef) {\n        this.divRef.dispatchEvent(\n          new CustomEvent('builder:accordion:load', {\n            bubbles: true,\n            cancelable: false,\n            detail: {\n              ref: this,\n            },\n          })\n        );\n      }\n    });\n  }\n\n  getAccordionItem(\n    titleBlocks: BuilderElement[],\n    detailBlocks: BuilderElement[],\n    index: number,\n    openGridItemOrder: number | null,\n    onlyOneAtATime: boolean,\n    fromChildren = false\n  ) {\n    const open = this.state.open.indexOf(index) !== -1;\n    const { grid } = this.props;\n\n    return (\n      // This will not work as expected with react 15\n      // Did preact get the span replacmenet too?\n      <React.Fragment key={index}>\n        <div\n          className={`builder-accordion-title builder-accordion-title-${open ? 'open' : 'closed'}`}\n          style={{\n            cursor: 'pointer',\n            display: 'flex',\n            flexDirection: 'column',\n            alignItems: 'stretch',\n            ...(grid && {\n              width: this.props.gridRowWidth,\n              ...(typeof openGridItemOrder === 'number' && {\n                order: index < openGridItemOrder ? index : index + 1,\n              }),\n            }),\n          }}\n          data-index={index}\n          onClick={() => {\n            if (open) {\n              this.setState({\n                ...this.state,\n                open: onlyOneAtATime ? [] : this.state.open.filter(item => item !== index),\n              });\n            } else {\n              this.setState({\n                ...this.state,\n                open: onlyOneAtATime ? [index] : this.state.open.concat(index),\n              });\n            }\n          }}\n        >\n          {fromChildren ? (\n            titleBlocks.map((block, index) => (\n              <BuilderBlockComponent\n                key={index}\n                block={{\n                  ...block,\n                  repeat: null,\n                }}\n                index={index}\n                child={true} /* TODO: fieldname? */\n              />\n            ))\n          ) : (\n            <BuilderBlocks blocks={titleBlocks} dataPath={`items.${index}.title`} />\n          )}\n        </div>\n        {open && (\n          <div\n            className={`builder-accordion-detail builder-accordion-detail-${\n              open ? 'open' : 'closed'\n            }`}\n            style={{\n              order: typeof openGridItemOrder === 'number' ? openGridItemOrder : undefined,\n              maxHeight: this.props.animate ? (open ? '100vh' : 0) : undefined,\n              transition: this.props.animate ? 'max-height 0.5s' : undefined,\n              ...(grid && {\n                width: '100%',\n              }),\n            }}\n          >\n            {open &&\n              (fromChildren ? (\n                detailBlocks.map((block, index) => (\n                  <BuilderBlockComponent\n                    key={index}\n                    block={{\n                      ...block,\n                      repeat: null,\n                    }}\n                    index={index}\n                    child={true} /* TODO: fieldname? */\n                  />\n                ))\n              ) : (\n                <BuilderBlocks blocks={detailBlocks} dataPath={`items.${index}.detail`} />\n              ))}\n          </div>\n        )}\n      </React.Fragment>\n    );\n  }\n\n  render() {\n    const { grid, oneAtATime } = this.props;\n\n    const onlyOneAtATime = Boolean(grid || oneAtATime);\n\n    const getOpenGridItemPosition = grid && this.state.open.length;\n    let openGridItemOrder: number | null = null;\n    if (getOpenGridItemPosition && this.divRef) {\n      const openItemIndex = this.state.open[0];\n      const openItem = this.divRef.querySelector(\n        `.builder-accordion-title[data-index=\"${openItemIndex}\"]`\n      );\n\n      let subjectItem = openItem;\n      openGridItemOrder = openItemIndex;\n\n      if (subjectItem) {\n        let prevItemRect = subjectItem.getBoundingClientRect();\n\n        while ((subjectItem = subjectItem && subjectItem.nextElementSibling)) {\n          if (subjectItem) {\n            if (subjectItem.classList.contains('builder-accordion-detail')) {\n              continue;\n            }\n            const subjectItemRect = subjectItem.getBoundingClientRect();\n            if (subjectItemRect.left > prevItemRect.left) {\n              const index = parseInt(subjectItem.getAttribute('data-index') || '', 10);\n              if (!isNaN(index)) {\n                prevItemRect = subjectItemRect;\n                openGridItemOrder = index;\n              }\n            } else {\n              break;\n            }\n          }\n        }\n      }\n    }\n\n    if (typeof openGridItemOrder === 'number') {\n      openGridItemOrder = openGridItemOrder + 1;\n    }\n\n    return (\n      <BuilderAsyncRequestsContext.Consumer>\n        {value => {\n          this._errors = value && value.errors;\n          this._logs = value && value.logs;\n\n          return (\n            <BuilderStoreContext.Consumer>\n              {state => (\n                <div\n                  ref={ref => (this.divRef = ref)}\n                  className=\"builder-accordion\"\n                  style={{\n                    display: 'flex',\n                    alignItems: 'stretch',\n                    flexDirection: 'column',\n                    ...(grid && {\n                      flexDirection: 'row',\n                      alignItems: 'flex-start',\n                      flexWrap: 'wrap',\n                    }),\n                  }}\n                >\n                  {/* TODO: helper static method for builder blocks to do this stuff */}\n                  {this.props.useChildrenForItems\n                    ? this.props.builderBlock &&\n                      this.props.builderBlock.children &&\n                      this.props.builderBlock.children.map(\n                        (block: BuilderElement, index: number) => {\n                          if (block.repeat && block.repeat.collection) {\n                            const collectionPath = block.repeat.collection;\n                            const collectionName = last(\n                              (collectionPath || '')\n                                .split(/\\.\\w+\\(/)[0]\n                                .trim()\n                                .split('.')\n                            );\n                            const itemName =\n                              block.repeat.itemName ||\n                              (collectionName ? collectionName + 'Item' : 'item');\n\n                            let array: any[] | void = stringToFunction(\n                              collectionPath,\n                              true,\n                              this._errors,\n                              this._logs\n                            )(state.state);\n                            if (isArray(array)) {\n                              return array.map((data, index) => {\n                                // TODO: Builder state produce the data\n                                const childState = {\n                                  ...state.state,\n                                  $index: index,\n                                  $item: data,\n                                  [itemName]: data,\n                                };\n\n                                return (\n                                  <BuilderStoreContext.Provider\n                                    key={block.id}\n                                    value={{ ...state, state: childState } as any}\n                                  >\n                                    {this.getAccordionItem(\n                                      block.children ? [block.children[0]] : [],\n                                      block.children ? [block.children[1]] : [],\n                                      index,\n                                      openGridItemOrder,\n                                      onlyOneAtATime,\n                                      true\n                                    )}\n                                  </BuilderStoreContext.Provider>\n                                );\n                              });\n                            }\n                          }\n                          return this.getAccordionItem(\n                            block.children ? [block.children[0]] : [],\n                            block.children ? [block.children[1]] : [],\n                            index,\n                            openGridItemOrder,\n                            onlyOneAtATime,\n                            true\n                          );\n                        }\n                      )\n                    : this.props.items &&\n                      this.props.items.map((item, index) => {\n                        return this.getAccordionItem(\n                          item.title,\n                          item.detail,\n                          index,\n                          openGridItemOrder,\n                          onlyOneAtATime\n                        );\n                      })}\n                </div>\n              )}\n            </BuilderStoreContext.Consumer>\n          );\n        }}\n      </BuilderAsyncRequestsContext.Consumer>\n    );\n  }\n}\n\nexport const BuilderAccordion = withBuilder(BuilderAccordionComponent, {\n  name: 'Builder:Accordion',\n  canHaveChildren: true,\n  image:\n    'https://cdn.builder.io/api/v1/image/assets%2FagZ9n5CUKRfbL9t6CaJOyVSK4Es2%2Ffab6c1fd3fe542408cbdec078bca7f35',\n  defaultStyles: {\n    display: 'flex',\n    flexDirection: 'column',\n    alignItems: 'stretch',\n  },\n  inputs: [\n    {\n      name: 'items',\n      type: 'list',\n      subFields: [\n        {\n          name: 'title',\n          type: 'uiBlocks',\n          hideFromUI: true,\n          defaultValue: [defaultTitle],\n        },\n        {\n          name: 'detail',\n          type: 'uiBlocks',\n          hideFromUI: true,\n          defaultValue: [defaultDetail],\n        },\n      ],\n      defaultValue: [\n        {\n          title: [defaultTitle],\n          detail: [defaultDetail],\n        },\n        {\n          title: [defaultTitle],\n          detail: [defaultDetail],\n        },\n      ],\n      showIf: options => !options.get('useChildrenForItems'),\n    },\n    {\n      name: 'oneAtATime',\n      helperText: 'Only allow opening one at a time (collapse all others when new item openned)',\n      type: 'boolean',\n      defaultValue: false,\n    },\n    {\n      name: 'animate',\n      helperText: 'Animate openning and closing',\n      type: 'boolean',\n      defaultValue: true,\n    },\n    {\n      name: 'grid',\n      helperText: 'Display as a grid',\n      type: 'boolean',\n      defaultValue: false,\n    },\n    {\n      name: 'gridRowWidth',\n      helperText: 'Display as a grid',\n      type: 'string',\n      showIf: options => options.get('grid'),\n      defaultValue: '25%',\n    },\n    {\n      name: 'useChildrenForItems',\n      type: 'boolean',\n      helperText:\n        'Use child elements for each slide, instead of the array. Useful for dynamically repeating items',\n      advanced: true,\n      defaultValue: false,\n      onChange: (options: Map<string, any>) => {\n        if (options.get('useChildrenForItems') === true) {\n          options.set('items', []);\n        }\n      },\n    },\n    // TODO: best way to do this? how multiple, comma? All with \"*\"? Have as a per item option?\n    // {\n    //   name: 'defaultOpen',\n    //   helperText: 'Number of the accordion item to have open default (e.g. choose 1 for the first)',\n    // }\n  ],\n});\n","import {\n  BuilderBlock,\n  BuilderBlocks,\n  BuilderBlockComponent,\n  BuilderElement,\n  BuilderStoreContext,\n  stringToFunction,\n  BuilderAsyncRequestsContext,\n  Builder,\n  withBuilder,\n} from '@builder.io/react';\nimport * as React from 'react';\nimport Masonry from 'react-masonry-component';\nimport isArray from 'lodash-es/isArray';\nimport last from 'lodash-es/last';\n\nconst defaultTile: BuilderElement = {\n  '@type': '@builder.io/sdk:Element',\n  responsiveStyles: {\n    large: {\n      display: 'flex',\n      flexDirection: 'column',\n      alignItems: 'stretch',\n      position: 'relative',\n      flexShrink: '0',\n      boxSizing: 'border-box',\n      marginTop: '20px',\n      minHeight: '20px',\n      minWidth: '20px',\n      overflow: 'hidden',\n      marginLeft: '20px',\n    },\n  },\n  component: {\n    name: 'Image',\n    options: {\n      image:\n        'https://builder.io/api/v1/image/assets%2Fpwgjf0RoYWbdnJSbpBAjXNRMe9F2%2Ffb27a7c790324294af8be1c35fe30f4d?width=2000&height=1200',\n      backgroundSize: 'cover',\n      backgroundPosition: 'center',\n      aspectRatio: 0.7041,\n    },\n  },\n};\n\nconst getRandomAspectTile = (): BuilderElement => ({\n  ...defaultTile,\n  component: {\n    ...defaultTile.component!,\n    options: {\n      ...defaultTile.component!.options,\n      // range from 0.5 to 2, rounded to 2 decimal points\n      aspectRatio: Math.round((Math.random() * 1.5 + 0.5) * 100) / 100,\n    },\n  },\n});\n\ntype BuilderBlockType = BuilderElement;\n\ninterface MasonryProps {\n  tiles: Array<\n    React.ReactNode | { content: BuilderBlockType[] } /* BuilderBlock <- export this type */\n  >;\n  builderBlock: BuilderBlockType;\n  useChildrenForTiles?: boolean;\n  gutterSize?: string;\n  columnWidth?: string;\n}\n\n// TODO: column with, gutter, etc options\nexport class BuilderMasonryComponent extends React.Component<MasonryProps> {\n  divRef: HTMLElement | null = null;\n  masonryRef: React.Component<Masonry.MasonryPropTypes> | null = null;\n\n  private _errors?: Error[];\n  private _logs?: string[];\n\n  state = {\n    layoutComplete: false,\n  };\n\n  componentDidMount() {\n    setTimeout(() => {\n      if (this.divRef) {\n        this.divRef.dispatchEvent(\n          new CustomEvent('builder:masonry:load', {\n            bubbles: true,\n            cancelable: false,\n            detail: {\n              block: this.props.builderBlock,\n              ref: this.divRef,\n              masonry: this.masonryRef,\n            },\n          })\n        );\n      }\n\n      if (Builder.isEditing) {\n        // mutation observer?\n      }\n    });\n  }\n\n  render() {\n    let slides = this.props.tiles;\n\n    // if (slides && !Builder.isBrowser) {\n    //   slides = slides.slice(0, 1)\n    // }\n\n    const itemStyle: any = {\n      display: 'flex',\n      flexDirection: 'column',\n      alignItems: 'stretch',\n      width: this.props.columnWidth,\n    };\n\n    return (\n      <div\n        style={{\n          opacity: Builder.isBrowser && this.state.layoutComplete ? 1 : 0,\n          transition: 'opacity 0.2s',\n        }}\n      >\n        <BuilderAsyncRequestsContext.Consumer>\n          {value => {\n            this._errors = value && value.errors;\n            this._logs = value && value.logs;\n\n            return (\n              <BuilderStoreContext.Consumer>\n                {state => (\n                  <div ref={ref => (this.divRef = ref)} className=\"builder-masonry\">\n                    <Masonry\n                      onLayoutComplete={() => {\n                        if (!this.state.layoutComplete) {\n                          this.setState({\n                            ...this.state,\n                            layoutComplete: true,\n                          });\n                        }\n                      }}\n                      options={{\n                        gutter: this.props.gutterSize,\n                        // Maybe us this\n                        fitWidth:\n                          this.props.columnWidth && this.props.columnWidth.endsWith('%')\n                            ? false\n                            : true,\n                        percentPosition:\n                          // TODO: option to override this too\n                          (this.props.columnWidth &&\n                            (this.props.columnWidth.endsWith('%') ||\n                              this.props.columnWidth.startsWith('.'))) ||\n                          false,\n                      }}\n                      ref={ref => (this.masonryRef = ref)}\n                    >\n                      {/* todo: children.forEach hmm insert block inside */}\n                      {this.props.useChildrenForTiles\n                        ? this.props.builderBlock &&\n                          this.props.builderBlock.children &&\n                          this.props.builderBlock.children.map(\n                            (block: BuilderElement, index: number) => {\n                              if (block.repeat && block.repeat.collection) {\n                                const collectionPath = block.repeat.collection;\n                                const collectionName = last(\n                                  (collectionPath || '')\n                                    .split(/\\.\\w+\\(/)[0]\n                                    .trim()\n                                    .split('.')\n                                );\n                                const itemName =\n                                  block.repeat.itemName ||\n                                  (collectionName ? collectionName + 'Item' : 'item');\n\n                                let array: any[] | void = stringToFunction(\n                                  collectionPath,\n                                  true,\n                                  this._errors,\n                                  this._logs\n                                )(state.state);\n\n                                if (isArray(array)) {\n                                  if (!Builder.isBrowser) {\n                                    array = array.slice(0, 1);\n                                  }\n\n                                  return array.map((data, index) => {\n                                    // TODO: Builder state produce the data\n                                    const childState = {\n                                      ...state.state,\n                                      $index: index,\n                                      $item: data,\n                                      [itemName]: data,\n                                    };\n\n                                    return (\n                                      <div className=\"masonry-item\" style={itemStyle}>\n                                        <BuilderStoreContext.Provider\n                                          key={block.id}\n                                          value={\n                                            {\n                                              ...state,\n                                              state: childState,\n                                            } as any\n                                          }\n                                        >\n                                          <BuilderBlockComponent\n                                            block={{\n                                              ...block,\n                                              repeat: null,\n                                            }}\n                                            index={index}\n                                            child={true} /* TODO: fieldname? */\n                                          />\n                                        </BuilderStoreContext.Provider>\n                                      </div>\n                                    );\n                                  });\n                                }\n                              }\n                              return (\n                                <div style={itemStyle} className=\"masonry-item\">\n                                  <BuilderBlockComponent\n                                    key={block.id}\n                                    block={block}\n                                    index={index}\n                                    child={true} /* TODO: fieldname? */\n                                  />\n                                </div>\n                              );\n                            }\n                          )\n                        : this.props.tiles &&\n                          this.props.tiles.map((tile, index) => (\n                            // TODO: how make react compatible with plain react components\n                            // tiles: <Foo><Bar> <- builder blocks if passed react nodes as blocks just forward them\n                            <div style={itemStyle} className=\"masonry-item\">\n                              <BuilderBlocks\n                                key={index}\n                                parentElementId={\n                                  this.props.builderBlock && this.props.builderBlock.id\n                                }\n                                dataPath={`component.options.tiles.${index}.content`}\n                                child\n                                blocks={(tile as any).content || tile}\n                              />\n                            </div>\n                          ))}\n                    </Masonry>\n                  </div>\n                )}\n              </BuilderStoreContext.Consumer>\n            );\n          }}\n        </BuilderAsyncRequestsContext.Consumer>\n      </div>\n    );\n  }\n}\n\nexport const BuilderMasonry = withBuilder(BuilderMasonryComponent, {\n  name: 'Builder:Masonry',\n  // TODO: default children\n  image:\n    'https://cdn.builder.io/api/v1/image/assets%2FBvYIl5jKN9QpChUB3PVzsTe2ZSI2%2F7ed6bd8129d148608ecec09300786d71?width=2000&height=1200',\n  canHaveChildren: true,\n  defaultStyles: {\n    paddingLeft: '20px',\n    paddingRight: '20px',\n    paddingBottom: '20px',\n  },\n  defaultChildren: [\n    getRandomAspectTile(),\n    getRandomAspectTile(),\n    getRandomAspectTile(),\n    getRandomAspectTile(),\n    getRandomAspectTile(),\n    getRandomAspectTile(),\n    getRandomAspectTile(),\n    getRandomAspectTile(),\n    getRandomAspectTile(),\n  ],\n  inputs: [\n    {\n      name: 'columnWidth',\n      // TODO: type: 'styleNumber'\n      type: 'string',\n      helperText: 'Width of each tile, as a CSS value. E.g. \"200px\" or \"50%\"',\n      defaultValue: '200px',\n    },\n    {\n      name: 'gutterSize',\n      type: 'number',\n      helperText: 'Horizontal space between tiles in pixels, e.g. \"20\" for 20 pixels wide',\n      defaultValue: 0,\n      advanced: true,\n    },\n    {\n      name: 'tiles',\n      type: 'list',\n      subFields: [\n        {\n          name: 'content',\n          type: 'uiBlocks',\n          hideFromUI: true,\n          defaultValue: [defaultTile],\n        },\n      ],\n      defaultValue: [],\n      showIf: options => !options.get('useChildrenForTiles'),\n    },\n    {\n      name: 'useChildrenForTiles',\n      type: 'boolean',\n      helperText:\n        'Use child elements for each slide, instead of the array. Useful for dynamically repeating tiles',\n      advanced: true,\n      defaultValue: true,\n      onChange: (options: Map<string, any>) => {\n        if (options.get('useChildrenForTiles') === true) {\n          options.set('tiles', []);\n        }\n      },\n    },\n  ],\n});\n"],"names":["React.createElement","React.Component","defaultElement","React.Fragment"],"mappings":"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"}